/* THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT. */
/* See the input xml in cfg/sample-secure-connection.cfg */

#ifndef __CONFIG_H
#define __CONFIG_H

#include <vm.h>

#include <arch.h>

/* Debug UART prints */
#define WARNINGS
#define INFOS
#define ERRORS

/* Hypervisor kernel configuration */
#define MILISECOND ((CPU_FREQ/2)/ 1000)
#define UART_SPEED 115200
#define QUANTUM_SCHEDULER_MS 10 
#define GUEST_QUANTUM_MS 1 

/* VMs mapping */
static const struct vmconf_t const VMCONF[] = {
	{ /* VM#1 */
		vm_name: "secureConnection",
		os_type: BARE_METAL,
		devices_mapping_sz: 1,
		devices: (const struct device_mapping_t const []) {
			{
				start_addr: UART2_BASE,
				size: UART2_SIZE,
			},
		},
		num_tlb_entries: 0x2,
		tlb: (const struct tlb_entries const []){
			{
				entrylo0: 0x00010,
				entrylo1: 0x00020,
				pagemask: PAGEMASK_64KB,
				entryhi: 0x00000,
				coherency: 2
			},
			{
				entrylo0: 0x1d010,
				entrylo1: 0x1d020,
				pagemask: PAGEMASK_64KB,
				entryhi: 0x1d000,
				coherency: 2
			},
		},
		ram_base: 0x80010000,
		flash_size: 0x20000,
		flash_base_add: 0x9d010000
	},
	{ /* VM#2 */
		vm_name: "blink",
		os_type: BARE_METAL,
		devices_mapping_sz: 2,
		devices: (const struct device_mapping_t const []) {
			{
				start_addr: PORTH_BASE,
				size: PORTH_SIZE,
			},
			{
				start_addr: UART2_BASE,
				size: UART2_SIZE,
			},
		},
		num_tlb_entries: 0x2,
		tlb: (const struct tlb_entries const []){
			{
				entrylo0: 0x00030,
				entrylo1: 0x00034,
				pagemask: PAGEMASK_16KB,
				entryhi: 0x00000,
				coherency: 2
			},
			{
				entrylo0: 0x1d030,
				entrylo1: 0x1d034,
				pagemask: PAGEMASK_16KB,
				entryhi: 0x1d000,
				coherency: 2
			},
		},
		ram_base: 0x80030000,
		flash_size: 0x8000,
		flash_base_add: 0x9d030000
	},
};

/* Virtual Machine names: secureConnection blink  */
#define NVMACHINES 2

#endif

